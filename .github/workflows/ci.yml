name: Deploy client + server

on:
  push:
    branches: [master, main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Frontend: build and deploy to Namecheap (FTP)
  deploy_client:
    if: contains(github.event.head_commit.message, 'client') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install & build (client)
        working-directory: client
        run: |
          npm ci
          npm run build   # -> client/dist

      - name: Upload dist contents to root public_html
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ${{ secrets.FTP_PROTOCOL }}
          local-dir: client/dist/
          server-dir: /
          exclude: |
            **/.git*
            **/.github/**
            **/node_modules/**

  # Backend: deploy /server to Heroku and verify
  deploy_heroku:
    if: contains(github.event.head_commit.message, 'server') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      - name: Reset Heroku buildpacks
        run: |
          heroku buildpacks:clear -a devkofi
          heroku buildpacks:set heroku/nodejs -a devkofi

      - name: Deploy API to Heroku (server subtree)
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git fetch --unshallow
          git push https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com/devkofi.git `git subtree split --prefix server HEAD`:refs/heads/main --force

      - name: Health check (retry until 200)
        shell: bash
        env:
          HEROKU_URL: https://devkofi-883f1d7b0ba0.herokuapp.com
          HEALTH_PATH: /health
        run: |
          set -e
          ATTEMPTS=20
          SLEEP=10
          for ((i=1;i<=ATTEMPTS;i++)); do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" "$HEROKU_URL$HEALTH_PATH")
            echo "Attempt $i/$ATTEMPTS → HTTP $CODE"
            if [ "$CODE" -eq 200 ]; then
              echo "Health check passed ✅"
              exit 0
            fi
            sleep $SLEEP
          done
          echo "Health check failed ❌ after $ATTEMPTS attempts"
          exit 1
