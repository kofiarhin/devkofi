name: Deploy client + server

on:
  push:
    branches: [master, main]
    paths:
      - "client/**"
      - "server/**"
      - ".github/workflows/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Frontend → Namecheap
  deploy_client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Build client
        working-directory: client
        run: |
          npm ci
          npm run build

      - name: Upload dist to Namecheap
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ${{ secrets.FTP_PROTOCOL }}
          local-dir: client/dist/
          server-dir: /
          exclude: |
            **/.git*
            **/.github/**
            **/node_modules/**

  # Backend → Heroku
  deploy_server:
    runs-on: ubuntu-latest
    needs: [deploy_client]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku --version

      - name: Set Heroku Node buildpack
        run: |
          heroku buildpacks:clear -a devkofi || true
          heroku buildpacks:set heroku/nodejs -a devkofi
          heroku buildpacks -a devkofi

      - name: Ensure Procfile in server/
        run: |
          echo "web: node server.js" > server/Procfile
          cat server/Procfile

      - name: Deploy API to Heroku (server subtree)
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: devkofi
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: server
          dontautocreate: true

      - name: Health check (retry until 200)
        shell: bash
        env:
          HEROKU_URL: https://devkofi-883f1d7b0ba0.herokuapp.com
          HEALTH_PATH: /health
        run: |
          set -e
          for i in {1..20}; do
            CODE=$(curl -s -o /dev/null -w "%{http_code}" "$HEROKU_URL$HEALTH_PATH")
            echo "Attempt $i → HTTP $CODE"
            if [ "$CODE" -eq 200 ]; then
              echo "Health check passed ✅"
              exit 0
            fi
            sleep 10
          done
          echo "Health check failed ❌"
          exit 1

      - name: Show Heroku logs on failure
        if: failure()
        run: heroku logs -n 300 -a devkofi || true
